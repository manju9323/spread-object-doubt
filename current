//plan to priority based
1) next.js
 
//data structures and algo
1) linked list 
2) Array
3) stack
4) tree
5) Graph
6) Queue
7) Binary Search
8) algorithm
9) set
10) string

Data Structures:
Arrays: A collection of elements stored at contiguous memory locations. Access to elements is done through indices.

Linked Lists: A data structure consisting of a sequence of elements where each element points to the next one in the sequence.

Stacks: A Last In, First Out (LIFO) data structure where elements are added and removed from the same end (top).

Queues: A First In, First Out (FIFO) data structure where elements are added at the rear and removed from the front.

Trees: A hierarchical data structure consisting of nodes connected by edges. Common types include Binary Trees, Binary Search Trees, AVL Trees, etc.

Graphs: A collection of nodes (vertices) and edges that connect some pairs of nodes. Graphs can be directed or undirected.

Hash Tables: A data structure that implements an associative array abstract data type, where keys are mapped to values using a hash function.

Heaps: A specialized tree-based data structure that satisfies the heap property. Common types include Min Heap and Max Heap.

Tries (Prefix Trees): A tree-like data structure used to store a dynamic set of strings where the keys usually represent strings.

Disjoint Sets (Union Find): A data structure that stores a collection of disjoint sets and supports operations for merging sets and finding the representative of a set.

Algorithms:
Sorting Algorithms:

Bubble Sort
Insertion Sort
Selection Sort
Merge Sort
Quick Sort
Heap Sort
Radix Sort
Counting Sort
Searching Algorithms:

Linear Search
Binary Search
Depth-First Search (DFS)
Breadth-First Search (BFS)
Graph Algorithms:

Dijkstra's Algorithm (Shortest Path)
Bellman-Ford Algorithm (Shortest Path)
Kruskal's Algorithm (Minimum Spanning Tree)
Prim's Algorithm (Minimum Spanning Tree)
Topological Sorting
Floyd-Warshall Algorithm (All Shortest Paths)
Depth-First Search (DFS)
Breadth-First Search (BFS)
Dynamic Programming:

Fibonacci Series
Longest Common Subsequence
Knapsack Problem
Matrix Chain Multiplication
Shortest Path Problems
Edit Distance
Greedy Algorithms:

Kruskal's Algorithm
Prim's Algorithm
Dijkstra's Algorithm
Huffman Coding
Backtracking Algorithms:

N-Queens Problem
Subset Sum
Sudoku Solver
Hamiltonian Cycle
Divide and Conquer Algorithms:

Binary Search
Merge Sort
Quick Sort
Strassen's Algorithm (Matrix Multiplication)
String Matching Algorithms:

Brute Force
Knuth-Morris-Pratt Algorithm (KMP)
Rabin-Karp Algorithm
Boyer-Moore Algorithm
Numerical Algorithms:

Euclidean Algorithm (GCD)
Sieve of Eratosthenes (Prime Numbers)
Fast Fourier Transform (FFT)
Newton-Raphson Method (Root Finding)
This list covers some fundamental data structures and algorithms commonly used in computer science and software development. Each has its own set of use cases, advantages, and complexities.
